---
# Portfolio Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-service
  namespace: crypto
  labels:
    app: portfolio-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: portfolio-service
  template:
    metadata:
      labels:
        app: portfolio-service
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: portfolio-service
        image: crypto-portfolio-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8005
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: crypto-config
              key: LOG_LEVEL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: crypto-config
              key: ENVIRONMENT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: crypto-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: crypto-config
              key: REDIS_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8005
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8005
          initialDelaySeconds: 10
          periodSeconds: 5

---
# Portfolio Service Service
apiVersion: v1
kind: Service
metadata:
  name: portfolio-service
  namespace: crypto
spec:
  selector:
    app: portfolio-service
  ports:
  - port: 8005
    targetPort: 8005
  type: ClusterIP

---
# ServiceMonitor for Prometheus (if using kube-prometheus-stack)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: crypto-services
  namespace: crypto
  labels:
    app: crypto
spec:
  selector:
    matchLabels:
      app: api-gateway
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
# Pod Disruption Budget for API Gateway
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: crypto
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api-gateway

---
# Pod Disruption Budget for Analytics Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: analytics-service-pdb
  namespace: crypto
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: analytics-service
